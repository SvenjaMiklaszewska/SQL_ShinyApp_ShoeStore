Projekt Bazy Danych
                                 
CREATE TABLE klienci(
id_klienta INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
imie VARCHAR(70),
nazwisko VARCHAR(80),
email VARCHAR(90) NOT NULL UNIQUE
);

CREATE TABLE kolor(
nazwa VARCHAR(80) PRIMARY KEY);

CREATE TABLE kolekcja(
nazwa VARCHAR(80) PRIMARY KEY);

CREATE TABLE material(
nazwa VARCHAR(80) PRIMARY KEY);

CREATE TABLE wysokosc_obcasa(
wysokosc INTEGER PRIMARY KEY);

CREATE TABLE sezon(
nazwa VARCHAR(80) PRIMARY KEY);

CREATE TABLE rodzaje (
nazwa VARCHAR(30) PRIMARY KEY
);
CREATE TABLE rozmiar (
rozmiar INTEGER PRIMARY KEY
);


CREATE TABLE forma_platnosci(
nazwa VARCHAR(20) PRIMARY KEY);








CREATE TABLE produkty(
id_produktu INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
nazwa VARCHAR(50) NOT NULL,
cena DECIMAL(6,2) CHECK(cena > 0 AND cena < 9999.99),
dla_kogo VARCHAR(20),
rozmiar INTEGER NOT NULL REFERENCES rozmiar(rozmiar) ON UPDATE CASCADE ON DELETE RESTRICT,
rodzaj VARCHAR(50) NOT NULL REFERENCES rodzaje(nazwa) ON UPDATE CASCADE ON DELETE RESTRICT,
kolor VARCHAR(80) NOT NULL REFERENCES kolor(nazwa) ON UPDATE CASCADE ON DELETE RESTRICT,
kolekcja VARCHAR(80) NOT NULL REFERENCES kolekcja(nazwa) ON UPDATE CASCADE ON DELETE RESTRICT,
material VARCHAR(80) NOT NULL REFERENCES material(nazwa) ON UPDATE CASCADE ON DELETE RESTRICT,
wysokosc_obcasa INTEGER NOT NULL REFERENCES wysokosc_obcasa(wysokosc) ON UPDATE CASCADE ON DELETE RESTRICT,
sezon VARCHAR(80) NOT NULL REFERENCES sezon(nazwa) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE zamowienia (
id_zamowienia INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
status_zamowienia VARCHAR(50) NOT NULL CHECK( status_zamowienia IN('oplacono','w przygotowaniu','wyslana','dostarczona')),
data_zrealizowania DATE ,
preferowany_termin_dostawy DATE NOT NULL,
forma_platnosci VARCHAR(20) NOT NULL DEFAULT('przelew') REFERENCES forma_platnosci(nazwa) ON UPDATE CASCADE ON DELETE RESTRICT,
adres_dostawy INTEGER  REFERENCES adres_dostawy(id_adres) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE zawartosc_koszyka (
id_zamowienia INTEGER REFERENCES zamowienia(id_zamowienia) ON DELETE CASCADE ON UPDATE RESTRICT ,
id_produktu INTEGER REFERENCES produkty (id_produktu) ON DELETE CASCADE ON UPDATE RESTRICT
);


CREATE TABLE adres_dostawy (
id_adres INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
miasto VARCHAR(50) NOT NULL,
ulica VARCHAR(50) NOT NULL,
nr_budynku INTEGER NOT NULL,
nr_mieszkania INTEGER ,
kod VARCHAR(6) NOT NULL CHECK (kod ~ '^[0-9]{2}-[0-9]{3}$'),
id_klienta INTEGER REFERENCES klienci(id_klienta) ON DELETE CASCADE ON UPDATE CASCADE
);





CREATE TABLE pomocnicza_klienci(
id_klienta INTEGER REFERENCES klienci(id_klienta) ON UPDATE CASCADE ON DELETE RESTRICT,
id_zamowienia INTEGER REFERENCES zamowienia(id_zamowienia) ON UPDATE CASCADE ON DELETE RESTRICT
);
#######tu zmiana
CREATE TABLE infor_zwrot_rekl(
id_informacji INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
informacja_zwrotna VARCHAR(50)
); 

CREATE TABLE reklamacje(
id_reklamacja INTEGER PRIMARY KEY  GENERATED BY DEFAULT AS IDENTITY,
id_zamowienia INTEGER NOT NULL REFERENCES zamowienia(id_zamowienia)  ON DELETE CASCADE ON UPDATE CASCADE,
id_produktu INTEGER NOT NULL REFERENCES produkty(id_produktu) ON DELETE CASCADE ON UPDATE CASCADE,
data_reklamacji DATE NOT NULL,                          
przyczyna VARCHAR(1000000),
informacja_zwrotna INTEGER REFERENCES infor_zwrot_rekl(id_informacji) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE zwroty(
id_zwrotu INTEGER PRIMARY KEY  GENERATED BY DEFAULT AS IDENTITY,
id_zamowienia INTEGER NOT NULL REFERENCES zamowienia(id_zamowienia)  ON DELETE CASCADE ON UPDATE CASCADE,
id_produktu INTEGER NOT NULL REFERENCES produkty(id_produktu) ON DELETE CASCADE ON UPDATE CASCADE,
data_zwrotu DATE NOT NULL,
przyczyna VARCHAR(1000000),
status VARCHAR(50) NOT NULL CHECK (status IN('rozpatrywane','rozpatrzone_pozytywnie','rozpatrzone_negatywnie'))
);

CREATE VIEW zawartosc_koszyka_view AS(
SELECT zk.id_zamowienia, pk.id_klienta,p.nazwa, p.cena,p.dla_kogo,p.rozmiar,p.rodzaj,p.kolor,p.kolekcja,p.material,p.wysokosc_obcasa,p.sezon
FROM pomocnicza_klienci pk JOIN zawartosc_koszyka zk 
USING(id_zamowienia) JOIN produkty p USING(id_produktu)
);

CREATE VIEW status_paczki AS (
SELECT z.id_zamowienia, pk.id_klienta, k.imie, k.nazwisko, z.status_zamowienia
FROM zamowienia  z  JOIN pomocnicza_klienci pk  USING(id_zamowienia) JOIN klienci k USING(id_klienta)
);

CREATE VIEW status_zwrotow AS (
SELECT z.id_zamowienia,status
FROM zwroty  AS z JOIN zamowienia AS zm ON (z.id_zamowienia=zm.id_zamowienia)
);

CREATE VIEW reklamacje_view AS (
SELECT r.id_reklamacja, r.id_zamowienia, r.id_produktu, r.data_reklamacji, izr.informacja_zwrotna
 FROM reklamacje r JOIN infor_zwrot_rekl  izr ON(r.informacja_zwrotna=izr.id_informacji));
